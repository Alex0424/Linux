{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Linux","text":"<p>This page provides centralized documentation of useful Linux commands and information.</p> <ul> <li>Author: Alexander Lindholm</li> <li>Last updated: October 22, 2025</li> <li>Source repository</li> </ul>"},{"location":"HTTP_CRUD/","title":"CRUD HTTP Methods with \ud83c\udf00 CURL","text":"<p>Flags</p> <ul> <li><code>-X</code> = Request Method</li> <li><code>-X GET</code> = Read data</li> <li><code>-X POST</code> = Create data</li> <li><code>-X PUT</code> = Update or replace data</li> <li><code>-X DELETE</code> = Remove data</li> <li><code>-X PATCH</code> = Partially update data</li> <li><code>-d</code> = Sends data in the request body</li> <li><code>-d '{\"name\":\"alex\",\"role\":\"dev\"}'</code></li> <li><code>-d \"name=alex&amp;role=dev\"</code></li> <li><code>-F</code> = Upload a file (multipart/form-data)</li> <li><code>-F \"file=@report.pdf\"</code></li> <li><code>-H</code> = Add custom request headers</li> <li><code>-H \"Content-Type: application/json\"</code></li> <li><code>-H \"Authorization: Bearer TOKEN\"</code></li> <li><code>-H \"X-Client-Version: 1.2.0\"</code></li> <li><code>-v</code> = Verbose (Show detailed request and response info)</li> <li><code>-L</code> = Follow redirects (301 or 302 CODE)</li> <li><code>-C -</code> = Resumes partial download</li> <li><code>curl -O https://example.com/largefile.zip</code> \u2192 Start download  </li> <li>(If it fails midway...)  </li> <li><code>curl -C - -O https://example.com/largefile.zip</code> \u2192 Continue from where it stopped</li> <li><code>-u user:pass</code> = Basic Auth</li> </ul>"},{"location":"HTTP_CRUD/#get-read","title":"\ud83d\udd3d GET (READ)","text":""},{"location":"HTTP_CRUD/#terminal-output","title":"\ud83d\udcdf Terminal Output","text":"<pre><code>curl -X GET https://api.example.com/users\n</code></pre>"},{"location":"HTTP_CRUD/#download-files","title":"\ud83d\udcbe Download Files","text":"<p>Save with original filename</p> <pre><code>curl -O https://example.com/file.txt\n</code></pre> <p>Save as a specific filename</p> <pre><code>curl -o myfile.txt https://example.com/file.txt\n</code></pre>"},{"location":"HTTP_CRUD/#post-create","title":"\u2795 POST (CREATE)","text":"<pre><code>curl -X POST https://api.example.com/developers \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\": \"Alexander\", \"role\": \"DevOps\"}'\n</code></pre>"},{"location":"HTTP_CRUD/#put-update-replace","title":"\u270d\ufe0f PUT (UPDATE / REPLACE)","text":""},{"location":"HTTP_CRUD/#replace-data-for-user-with-id-3","title":"Replace data for user with ID 3","text":"<pre><code>curl -X PUT \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\": \"updated.email@example.com\"}' \\\n  https://crud.ba3a.tech/users/3\n</code></pre>"},{"location":"HTTP_CRUD/#delete","title":"\u274c DELETE","text":"<pre><code>curl -X DELETE https://crud.ba3a.tech/users/3\n</code></pre>"},{"location":"HTTP_CRUD/#upload-a-file-with-token-auth","title":"\ud83d\udd12 Upload a File with Token Auth","text":"<pre><code>curl -X POST https://api.example.com/upload \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -F \"file=@report.pdf\"\n</code></pre>"},{"location":"HTTP_CRUD/#debugging","title":"\ud83d\udd75\ufe0f Debugging","text":"<p>View only headers</p> <pre><code>curl -I https://example.com\n</code></pre> <p>Verbose output (full request/response)</p> <pre><code>curl -v https://example.com\n</code></pre>"},{"location":"HTTP_CRUD/#download-with-wget-easier-download-tool","title":"\ud83c\udf10 Download With WGET (easier download tool)","text":""},{"location":"HTTP_CRUD/#save-to-a-directory-prefix","title":"Save to a directory (prefix)","text":"<pre><code>wget --https-only -P ./path &lt;URL&gt;\n</code></pre>"},{"location":"HTTP_CRUD/#save-to-a-specific-file","title":"Save to a specific file","text":"<pre><code>wget --https-only -O ./path/file.txt &lt;URL&gt;\n</code></pre>"},{"location":"archive/","title":"Archive Commands","text":""},{"location":"archive/#tar","title":"\ud83d\udcbe TAR","text":"<p>Flags</p> <ul> <li><code>-c</code> = create</li> <li><code>-x</code> = extract</li> <li><code>-z</code> = gzip</li> <li><code>-v</code> = verbose</li> <li><code>-f</code> = filename</li> <li><code>-C</code> = extract into directory</li> </ul>"},{"location":"archive/#create-a-tar-archive","title":"\ud83d\udcbe Create a <code>.tar</code> archive","text":"<pre><code>tar -cvf archive.tar &lt;file_or_directory&gt;\n</code></pre>"},{"location":"archive/#extract-a-tar-archive","title":"\ud83d\udcbe Extract a <code>.tar</code> archive","text":"<pre><code>tar -xvf archive.tar -C &lt;/target_directory&gt;\n</code></pre>"},{"location":"archive/#tar-tar-file-preview","title":"\ud83d\udcbe TAR <code>.tar</code> file preview","text":"<pre><code>tar -tvf archive.tar\n</code></pre>"},{"location":"archive/#create-a-tar-gzip-targz-archive","title":"\ud83d\udddc\ufe0f Create a TAR + GZIP <code>.tar.gz</code> archive","text":"<pre><code>tar -czvf archive.tar.gz &lt;file_or_directory&gt;\n</code></pre>"},{"location":"archive/#extract-a-tar-gzip-targz-archive","title":"\ud83d\udddc\ufe0f Extract a TAR + GZIP <code>.tar.gz</code> archive","text":"<pre><code>tar -xzvf archive.tar.gz -C &lt;/target_directory&gt;\n</code></pre>"},{"location":"archive/#tar-gzip-targz-file-preview","title":"\ud83d\udddc\ufe0f TAR + GZIP <code>.tar.gz</code> file preview","text":"<pre><code>tar -tzvf archive.tar.gz\n</code></pre>"},{"location":"archive/#gzip-only-single-files","title":"\ud83d\udcc3 GZIP <code>\u26a0\ufe0f only single files \u26a0\ufe0f</code>","text":"<p>Flags</p> <ul> <li><code>-k</code> = keep file</li> <li><code>-c</code> = Write compressed or decompressed data to stdout</li> <li><code>&gt;</code> = Redirect that output into a new file</li> </ul>"},{"location":"archive/#archive-compress-to-gz-file-with-gzip","title":"\ud83d\udcc4 Archive (Compress) to <code>.gz</code> file with GZIP","text":"<pre><code>gzip -k archive.txt\n</code></pre> <p>\ud83d\udca1 or (same result using output redirection):</p> <pre><code>gzip -c archive.txt &gt; archive.txt.gz\n</code></pre> <p>\u2705 Also keeps the original file.</p>"},{"location":"archive/#extract-decompress-a-gz-file-with-gzip","title":"\ud83d\udcc4 Extract (Decompress) a <code>.gz</code> file with GZIP","text":"<pre><code>gunzip -k archive.txt.gz\n</code></pre> <p>\ud83d\udca1 or (same result using output redirection):</p> <pre><code>gunzip -c archive.txt.gz &gt; archive.txt\n</code></pre> <p>\u2705 Also keeps the original file.</p>"},{"location":"archive/#zip","title":"\ud83d\udd17 \u2704\u2508\u2508\u2508\u2508 ZIP","text":"<p>Flags</p> <ul> <li><code>-r</code> = Recursively include directories and files</li> </ul>"},{"location":"archive/#create-a-zip-archive","title":"\ud83d\udd17 Create a <code>.zip</code> archive","text":"<pre><code>zip -r archive.zip &lt;file_or_directory&gt;\n</code></pre>"},{"location":"archive/#extract-unzip-a-zip-archive","title":"\ud83d\udd17 Extract (Unzip) a <code>.zip</code> archive","text":"<pre><code>unzip archive.zip -d &lt;/target_directory&gt;\n</code></pre>"},{"location":"archive/#zip-file-preview","title":"\ud83d\udd17 Zip file preview","text":"<pre><code>unzip -l archive.zip\n</code></pre>"},{"location":"archive/#validate-file-info","title":"\ud83d\udd0d Validate file info","text":"<pre><code>file archive.zip\nfile archive.tar.gz\nfile archive.tar\nfile archive.gz\n</code></pre>"},{"location":"commands/","title":"Linux default \"command-line shell\" commands","text":"<pre><code>command list:\n$ whoami                       #display your username\n$ pwd                          #print working directory\n$ ls                           #list files\n$ cd /example/dir              #change to /example/dir directory\n$ cd ..                        #change to one step back directory\n$ cd                           #change to home directory\n$ mkdir ./dir                  #create directory\n$ mkdir -p /home/$USER/{a,b}/{x,y,z}     #create multiple directories\n$ ln -s /dir/fileA.txt fileB   #create a link\n$ unlink fileC                 #remove a link\n$ cat                          #displaying file conten &amp; concatenation\n$ sudo -i                      #switch to root user\n$ touch file{1..10}.txt        #create 10 files\n$ cp file.txt dir/             #move txt file to another directory\n$ cp /dir1/file.txt /dir1/dir2 # cp txt file to another directory using absolute path\n$ cp -r dirX dirY/             # copy a directory to another directory\n$ mv file.txt dir/             #move file to directory\n$ mv dir1 dir2/                #move directory to another directory\n$ mv fileA.txt fileB.txt       #rename file\n$ mv *.txt dir/                #move all txt files to a directory\n$ rm file.txt                  #remove a file\n$ rm -r dir                    #remove a directory\n$ rm -rf dir                   #remove a directory with force\n$ rm -rf *                     #remove everything with force\n$ file file_example            #check file info bin or txt...\n$ vim /etc/host                #idk\n$ vim /etc/hostname            #change host name in vim\n$ hostname name_example        #change hostname in command\n$ free -m                      #memmory utilization\n$ df -h                        #disk partition\n$ uptime                       #\n$ date                         #\n$ wc -l /etc/passwd            #count number of lines in file\n$ cat /proc/cpuinfo            #cpuinfo\n$ tail -f err.log              #follow log file\n\n\n\nFILE:\nuptime &gt; /tmp/sysinfo.txt            #write command to file\nuptime &gt;&gt; /tmp/sysinfo.txt           #append command to file\necho \"your_text\" &gt; tmp/sysinfo.txt   #write text to file\necho \"your_text\" &gt;&gt; tmp/sysinfo.txt  #append text to file\ncat /dev/null &gt; /tmp/sysinfo.txt     #clear file\nfreeee -m 1&gt;&gt; /tmp/error.log         #will not do error to file\nfreeee -m 2&gt;&gt; /tmp/error.log         #get error text to file\nfreeee -m &amp;&gt;&gt; /tmp/error.log         #get error text or command if works to file\n</code></pre>"},{"location":"commands/#get-help-with-any-command","title":"Get help with any command:","text":"<p><code>command --help</code> e.g. <code>ls --help</code></p>"},{"location":"commands/#advanced-commands","title":"Advanced commands:","text":"<pre><code>$ ls -lhatr                   # -l (long format), -h (human-readable sizes), -a (all files include hidden files), -t (sort by modification time, recently modified files first), -r (reverse)\n$ cat /etc/os-release         #OS name &amp; Version from CLI\n$ touch testfile{1..10}.txt   #create 10 files\n</code></pre>"},{"location":"crontab/","title":"Crontab","text":"<p>edit crontab: <code>crontab -e</code></p> <p>first 5 parameters is time and after that is the command </p>"},{"location":"distros/","title":"Popular linux distributions (differences)","text":"<ul> <li>Popular Desktop Linux OS: <code>Ubuntu Linux</code> <code>Linux Mint</code> <code>Arch Linux</code> <code>Fedora</code> <code>Debian</code> <code>OpenSuse</code></li> <li>Popular Server Linux OS: <code>Red Hat Enterprise Linux</code> <code>Ubuntu Server</code> <code>Centos</code> <code>SUSE Enterprise Linux</code></li> </ul>"},{"location":"distros/#rpb-vs-debian","title":"RPB vs Debian","text":"<ul> <li><code>.rpm</code> RPM based distros: <code>RHEL</code> <code>CentOS</code> <code>Oracle</code> <code>Linux</code> \u2192 E.g. installation: <code>rpm -ivh google-chrome.rpm</code></li> <li><code>.deb</code> Debian Based distros: <code>Ubuntu Server</code> <code>Kali Linux</code> \u2192 E.g. installation: <code>dpkg -i google-chrome.deb</code></li> </ul>"},{"location":"env_var/","title":"Environment Variables","text":""},{"location":"env_var/#option-1-activate-from-cli-command-line-interface","title":"Option 1: Activate from CLI (Command Line Interface)","text":"<pre><code>export team=ops\n</code></pre> <p>The <code>export</code> keyword is required so that the variable is available to child processes, such as scripts or applications launched from your shell.</p> <p>Validate</p> <pre><code>echo $team\n</code></pre>"},{"location":"env_var/#option-2-activate-variables-while-starting-a-script","title":"Option 2: Activate Variables While Starting a Script","text":"<p>You can set a temporary environment variable just for the duration of a command</p> <pre><code>team=ops python3 main.py\n</code></pre> <p>Sets team=ops only for the main.py process and any child processes that main.py spawns.</p>"},{"location":"env_var/#option-3-activate-from-env-file","title":"Option 3: Activate from <code>.env</code> file","text":"<ol> <li>Create the <code>.env</code> file:</li> </ol> <pre><code>echo \"export team=ops\" &gt;&gt; .env\n</code></pre> <ol> <li>Load the environment variables:</li> </ol> <pre><code>source .env\n</code></pre> <p>Using <code>export</code> in the <code>.env</code> file ensures the variable is available to child processes.</p>"},{"location":"env_var/#repository-security","title":"Repository Security","text":"<p>To keep environment variables secure, ensure <code>.env</code> is ignored by version control:</p> <pre><code>echo \".env\" &gt;&gt; .gitignore\n</code></pre> <p>This prevents accidentally committing sensitive information to your repository.</p>"},{"location":"env_var/#print-environments-activated-for-a-specific-pid","title":"Print environments activated for a specific PID","text":"<pre><code>MY_PID=$$ \\\n&amp;&amp; cat /proc/$MY_PID/environ\n</code></pre>"},{"location":"filter/","title":"Filter","text":""},{"location":"filter/#grep","title":"Grep","text":"<pre><code>grep -orIinm1 --color=always --exclude-dir=\".git\" \"replace_me\" ./ | cut -c1-1000 &amp;&amp; tput sgr0\n</code></pre> <pre><code>less -I +5 +/replace_me file.txt\nless -I +5 file.txt\nnvim +5 file.txt\n</code></pre>"},{"location":"filter/#find","title":"Find","text":"<pre><code>find . -path \"./.git\" -prune -o -name \"*.txt\" -print\n</code></pre>"},{"location":"filter/#extra-commands","title":"Extra Commands","text":""},{"location":"filter/#filter_1","title":"Filter","text":"<pre><code>grep -i firewall example.txt         #looking for \"firewall\" pattern in example.txt wheter the letters are capital or not.\ngrep -i firewall &lt; example.txt       #\ngrep -i firewall *                   #lookin for firewall word in all files.\ngrep -iR firewall *                  #\ngrep -R SELINUX /etc/*               #search for \"SELINUX\" in all file and directories in etc\ngrep -vi firewall example.txt        #everything that do not contain firewall pattern\nless example.txt                     #\nmore example.txt                     #\nhead -10 example.txt                 #first 10 lines\ntail -10 example.txt                 #last 10 lines\ntail -f var/log/messages             #monitor system log messages in real time\ncut -d: -f1 /etc/passwd              #cut separator\nawk -F':' '{print $1}' /etc/passwd   #awk separator\nsed -i 's/word/new_word/g' *.txt     #replace all words containing coronavirus to covid19 to all txt files             #\nfind /etc -name 'host*'              #\n\nFIRST-COMMAND$ updatedb              #updates path\nSECOND-COMMAND$ locate host          #search for files that are named \"host\" \n</code></pre>"},{"location":"filter/#pipes","title":"PIPES","text":"<pre><code>ls | wc -l                                         #count number of files\nls | grep host                                     #lists all that starts with host\ntail -20 /var/log/messages | grep -i vagrant       #\nfree -m | grep Mem                                 #\nls -l | head                                       #\n</code></pre>"},{"location":"path/","title":"Path","text":""},{"location":"path/#what-is-path-in-linux","title":"What is PATH in Linux?","text":"<p>The PATH is an environment variable that tells Linux where to look for executable programs. When you type a command, Linux searches through the directories listed in PATH to find the program to execute.</p>"},{"location":"path/#check-path","title":"Check PATH","text":"<pre><code>echo $PATH\n</code></pre> <p>or</p> <pre><code>printenv PATH\n</code></pre> <p>output example:</p> <pre><code>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n</code></pre>"},{"location":"path/#adding-a-new-path-temporarily","title":"Adding a new PATH temporarily","text":"<p>To add a new directory to PATH for your current terminal session:</p> <pre><code>export PATH=$PATH:/your/new/path\n</code></pre>"},{"location":"path/#adding-a-path-permanently","title":"Adding a PATH permanently","text":"<ol> <li>Edit your shell's configuration file:</li> <li> <p>For Bash:    <code>bash    nano ~/.bashrc</code></p> </li> <li> <p>Add this line at the end of the file:</p> </li> </ol> <pre><code>export PATH=$PATH:/your/new/path\n</code></pre> <ol> <li>Save and apply changes:</li> </ol> <pre><code>source ~/.bashrc\n</code></pre> <ol> <li>Validate newly appended PATH:</li> </ol> <pre><code>which program_name\n</code></pre>"},{"location":"path/#common-path-locations","title":"Common PATH locations","text":"<ul> <li><code>/bin</code>: Essential user commands</li> <li><code>/usr/bin</code>: Most user commands</li> <li><code>/usr/local/bin</code>: User-installed programs</li> <li><code>/sbin</code>: System administration commands</li> <li><code>/usr/sbin</code>: Additional system admin commands</li> </ul>"},{"location":"path/#tips-for-beginners","title":"Tips for Beginners","text":"<ol> <li>Never remove default PATH directories</li> <li>Keep custom scripts in <code>~/bin</code> or <code>/usr/local/bin</code></li> <li>Use absolute paths when adding new directories</li> <li>Separate multiple paths with colons (:)</li> </ol>"},{"location":"permission/","title":"Permission","text":""},{"location":"permission/#file-permission","title":"File permission","text":"<p><code>drwxr-xr-x.  2 root root     40 Jul  5 14:09</code></p> <p>1-1 letter mean its file, directory or something else.</p> <p>2-4 letters means <code>r</code>read <code>w</code>write <code>x</code>execute for owner.</p> <p>5-7 letters means <code>r</code>read <code>w</code>write <code>x</code>execute for group.</p> <p>8-10 letters means <code>r</code>read <code>w</code>write <code>x</code>execute for other.</p> <pre><code>chown -R ansible:devops /opt/devopsdir\nchmod o-r /opt/devopsdir\nchmod g+w /opt/devopsdir\nchmod u-x /opt/devopsdir\nchmod 770 devopsdir/\n</code></pre> <p>Ownership</p> <pre><code>sudo usermod -a -G mygroup jenkins\nsudo groupadd mygroup\nsudo chown -R alex:mygroup /home/alex/test\n</code></pre> <pre><code>sudo chown jenkins:jenkins /home/alex/test\nsudo chown -R jenkins:jenkins /home/alex # add group to all\n</code></pre> <p>Users</p> <pre><code>sudo useradd alex2\nsudo passwd alex2\nsu alex2\n</code></pre>"},{"location":"permission/#groups","title":"Groups","text":"<pre><code>cat /etc/passwd\ncat /etc/groups\nid vagrant\nuseradd dev\npasswd dev\nusrdel dev\nusrdel -r dev                   #delete user along with his home directory\nsu - dev                        #login\ngroupadd devops\ngroupdel devops\nusermod -aG devops dev\nid ansible\nvim /etc/group\n\nlast\nwho\nlsof -u vagrant                 #will list files opened by user \n</code></pre>"},{"location":"permission/#add-sudo-usergroup","title":"Add Sudo User/Group","text":""},{"location":"permission/#not-safe-option-a","title":"(not safe) Option A:","text":"<pre><code>visudo     #edit /etc/sudoers file\n</code></pre> <p><code>add user:</code></p> <pre><code>100    root    ALL=(ALL)       ALL\n101    ansible ALL=(ALL)       NOPASSWD: ALL\n</code></pre> <p><code>add group:</code></p> <pre><code>100    root     ALL=(ALL)       ALL\n101    %ansible ALL=(ALL)       NOPASSWD: ALL\n</code></pre>"},{"location":"permission/#safe-option-b","title":"(safe) Option B:","text":"<pre><code>cd /etc/sudoers.d\ncp vagrant devops\nvim devops\n</code></pre> <p><code>add user:</code></p> <pre><code>devops ALL=(ALL) NOPASSWD: ALL\n</code></pre> <p><code>add group:</code></p> <pre><code>%devops ALL=(ALL) NOPASSWD: ALL\n</code></pre>"},{"location":"root_directories/","title":"Directories","text":"<p>Home Directory: <code>/root</code> <code>/home/user</code></p> <p>User executabl: <code>/bin</code> <code>/usr/bin</code> <code>/usr/local/bin</code></p> <p>System executable: <code>/sbin</code> <code>/usr/sbin</code> <code>/usr/local/sbin</code></p> <p>Other mountpoints: <code>/media</code> <code>/mnt</code></p> <p>Configuration: <code>/etc</code></p> <p>Temporary Files: <code>/tmp</code></p> <p>Kernel &amp; bootloader: <code>/boot</code></p> <p>Server data: <code>/var</code> <code>/srv</code></p> <p>System information: <code>/proc</code> <code>/sys</code></p> <p>Shared libraries: <code>/lib</code> <code>/usr/lib</code> <code>usr/local/lib</code></p>"},{"location":"services/","title":"Services (CentOS)","text":"<p>lets analize httpd (do this before: <code>yum install httpd</code>)</p> <pre><code>systemctl status httpd\nsystemctl start httpd\nsystemctl stop httpd\nsystemctl restart httpd\nsystemctl reload httpd\nsystemctl enable httpd\nsystectl disable httpd\nsystemctl is-active httpd\nsystemctl is-enabled httpd\n</code></pre> <p>where the config file is created for httpd when installed:</p> <pre><code>cat /etc/systemd/system/multi-user.target.wants/httpd.service\n</code></pre>"},{"location":"services/#processes","title":"Processes","text":"<pre><code>top\nps aux\nps -ef\nps -ef | grep httpd | grep -v \"grep\"\nkill 1420                              #kill process and close child processes if the process is a parent.\nkill -9 1420                           #kill the process without closing child processes\nps -ef | grep httpd | grep -v \"grep\" | awk \"{print $2}\"\nps -ef | grep httpd | grep -v \"grep\" | awk \"{print $2}\" | xargs kill -9\n</code></pre>"},{"location":"user/","title":"User","text":""},{"location":"user/#user-prompt","title":"User prompt","text":"<p><code>[steve@localhost ~]$</code></p> <ul> <li>username: <code>steve</code></li> <li>hostname: <code>localhost</code></li> <li>home-directory: <code>~</code></li> <li>normal user: <code>$</code></li> <li>system administrator(root): <code>#</code> (will replace the dollar($) sign when switching to root user)</li> </ul>"},{"location":"user/#user-home-path","title":"User home path","text":"<ul> <li><code>/home/$USER</code></li> </ul>"},{"location":"vim/","title":"Vim","text":""},{"location":"vim/#how-to-edit-or-create-a-file-with-vim-text-editor","title":"How to edit or create a file with Vim text editor","text":"<pre><code>$ vim file.txt    #create a text file and open it in vim\n</code></pre>"},{"location":"vim/#default-commands-when-your-editing-in-vim","title":"Default commands (when your editing in vim)","text":"<ul> <li>Insert mode(edit): <code>i</code></li> <li>Insert mode &amp; create new line under cursor(edit): <code>o</code></li> <li>Save file: <code>esc</code> then <code>:w</code> then <code>Entre</code></li> <li>Quit file: <code>esc</code> then <code>:q</code> then <code>Entre</code></li> <li>Quit file with force: <code>esc</code> then <code>:q!</code> then <code>Entre</code></li> <li>Save &amp; Quit file: <code>esc</code> then <code>:wq</code> then <code>Entre</code> OR <code>esc</code> then <code>:x</code> then <code>Entre</code></li> <li>Set numbers: <code>esc</code> then <code>:se num</code></li> <li>Go to last line: <code>Shift</code> + <code>G</code></li> <li>Go to first line: <code>gg</code></li> <li>copy line: <code>yy</code> OR <code>3</code> * <code>yy</code> to copy 3 lines</li> <li>copy multiple lines: <code>Shift</code> + <code>V</code> then use <code>j</code> to move down <code>k</code> to move up</li> <li>copy lines 10 to 20 do: <code>:10,20y</code></li> <li>paste line above: <code>Shift</code> + <code>P</code></li> <li>paste line under: <code>p</code></li> <li>cut line: <code>dd</code></li> <li>search: <code>/s</code></li> <li>undo: <code>u</code></li> <li>redo: <code>Ctrl</code> + <code>R</code></li> <li>replace all words <code>:%s/name/new_name/g</code> </li> <li>search and replace <code>:%s/name.main/name\\.rg/g</code></li> </ul>"}]}